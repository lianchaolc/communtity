spring.resources.static-locations=classpath:/templates/
##开启模板缓存（默认值：true）一般都会改成false 因为缓存会影响页面的实时显示
#spring.thymeleaf.cache=false
##是否在呈现模板之前检查模板是否存在
#spring.thymeleaf.check-template=true
##检查模板位置是否正确(默认值:true)
#spring.thymeleaf.check-template-location=true
##是否为Web框架启用Thymeleaf视图解析
#spring.thymeleaf.enabled=true
##在SpringEL表达式中启用SpringEL编译器
#spring.thymeleaf.enable-spring-el-compiler=false
##模板编码
#spring.thymeleaf.encoding=UTF-8
##要被排除在解析之外的视图名称列表，用逗号分隔
#spring.thymeleaf.excluded-view-names=
##要运用于模板之上的模板模式。另见TemplateMode(默认值：HTML5)
#spring.thymeleaf.mode=HTML5
##在构建URL时添加到视图名称前的前缀（默认值：classpath:/templates/）
#spring.thymeleaf.prefix=classpath:/templates/
#＃逗号分隔的视图名称列表（允许的模式），当设置了最大块大小时，应该是CHUNKED模式中唯一执行的视图名称列表。
#spring.thymeleaf.reactive.chunked-mode-view-names=
#＃即使设置了最大块大小，也应该在FULL模式下执行逗号分隔的视图名称列表(允许的模式)。
#spring.thymeleaf.reactive.full-mode-view-names=
#＃用于写入响应的数据缓冲区的最大大小
#spring.thymeleaf.reactive.max-chunk-size=0B
##＃视图技术支持的媒体类型
#spring.thymeleaf.reactive.media-types=
#＃写入HTTP响应的Content-Type值
#spring.thymeleaf.servlet.content-type=text/html
#＃在构建URL时附加到视图名称的后缀。
#spring.thymeleaf.suffix=.html
##Thymeleaf模板解析器在解析器链中的顺序。默认情况下，它排第一位。顺序从1开始，只有在定义了额外的TemplateResolver Bean时才需要设置这个属性。
#spring.thymeleaf.template-resolver-order=
#＃可以解析的逗号分隔的视图名称列表
#spring.thymeleaf.view-names=
#server.context-path=/crud
#server.tomcat.uri-encoding=UTF-8
#
#
#spring.mvc.date-format=yyyy-MM-dd
#
## \u7981\u7528\u7F13\u5B58
#spring.thymeleaf.cache=false
#
## \u56FD\u9645\u5316\u914D\u7F6E\u6587\u4EF6\uFF08\u5305\u540D.\u57FA\u7840\u540D\uFF09
#spring.messages.basename=i18n.login
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.port=8081
server.context-path=/crud
server.tomcat.uri-encoding=UTF-8


spring.mvc.date-format=yyyy-MM-dd

# \u7981\u7528\u7F13\u5B58
spring.thymeleaf.cache=false 

# \u56FD\u9645\u5316\u914D\u7F6E\u6587\u4EF6\uFF08\u5305\u540D.\u57FA\u7840\u540D\uFF09
spring.messages.basename=i18n.login